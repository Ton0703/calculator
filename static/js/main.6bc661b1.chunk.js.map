{"version":3,"sources":["App.jsx","data.js","index.js"],"names":["App","useState","output","setOutput","isOperator","setIsOperator","isDecimalAdded","setIsDecimalAdded","handleButtonClick","value","toString","result","replace","RegExp","eval","length","includes","toFixed","className","style","fontSize","Buttons","map","item","index","key","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"upBAIA,SAASA,MAAO,IAAD,UACeC,oDAAS,GADxB,sIACNC,OADM,cACEC,UADF,yBAEuBF,qDAAS,GAFhC,uIAENG,WAFM,cAEMC,cAFN,yBAG+BJ,qDAAS,GAHxC,uIAGNK,eAHM,cAGUC,kBAHV,cAKPC,kBAAoB,SAApBA,kBAAqBC,OACzB,OAAQA,OACN,IAAK,KACHN,UAAU,GACVE,eAAc,GACdE,mBAAkB,GAClB,MACF,IAAK,OACH,GAAc,IAAXL,OAAc,OACjBC,YAAqB,EAAVD,QAAaQ,YACxB,MACF,IAAK,IACH,GAAc,IAAXR,OAAc,OACjBC,WAAWD,OAAS,KAAKQ,YACzB,MACF,IAAK,IACHJ,gBAAkBH,UAAUD,OAAS,KACrCK,mBAAkB,GAClB,MACF,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,OACH,GAAe,IAAXL,OAAc,OAClBE,YAAcD,UAAUD,OAASO,OACjCF,mBAAkB,GAClBF,eAAc,GACd,MACF,IAAK,IACH,GAAe,IAAXH,OAAc,OAClBC,UAAUD,OAAS,KACnB,MACF,IAAK,IACH,IAAIS,OAAST,OACVU,QAAQ,IAAIC,OAAO,IAAK,KAAM,KAC9BD,QAAQ,IAAIC,OAAO,OAAK,KAAM,KACjCV,UACEW,KAAKH,QAAQD,WAAWK,OAAS,GAC/BD,KAAKH,QAAQD,WAAWM,SAAS,KAC/BF,KAAKH,QAAQM,QAAQ,GAAGP,WACxBI,KAAKH,QAAQD,YAEnB,MACF,QACY,MAAVD,OAAiBN,UAAqB,IAAXD,OAAeO,MAAQP,OAASO,OAC3DJ,eAAc,KAGpB,OACE,kEAAKa,UAAU,OACb,kEACEA,UAAU,SACVC,MAAO,CAAEC,SAAUlB,OAAOa,OAAS,GAAK,OAAS,SAEjD,uEACCb,SAGH,kEAAKgB,UAAU,SACZG,qCAAQC,KAAI,SAACC,EAAMC,GAAP,OACX,kEACEC,IAAKD,EACLN,UAAU,UAEV,qEAAQQ,QAAS,kBAAMlB,kBAAkBe,EAAKd,SAASc,EAAKd,aAQzDT,2B,6BCjFA,KACb,CACES,MAAO,MAET,CACEA,MAAO,QAET,CACEA,MAAO,KAET,CACEA,MAAO,QAET,CACEA,MAAO,KAET,CACEA,MAAO,KAET,CACEA,MAAO,KAET,CACEA,MAAO,KAET,CACEA,MAAO,KAET,CACEA,MAAO,KAET,CACEA,MAAO,KAET,CACEA,MAAO,KAET,CACEA,MAAO,KAET,CACEA,MAAO,KAET,CACEA,MAAO,KAET,CACEA,MAAO,KAET,CACEA,MAAO,KAET,CACEA,MAAO,KAET,CACEA,MAAO,KAET,CACEA,MAAO,O,6DC3DX,kDAKAkB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.6bc661b1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Buttons from \"./data\";\r\nimport \"./App.scss\";\r\n\r\nfunction App() {\r\n  const [output, setOutput] = useState(0);\r\n  const [isOperator, setIsOperator] = useState(true);\r\n  const [isDecimalAdded, setIsDecimalAdded] = useState(true);\r\n\r\n  const handleButtonClick = (value) => {\r\n    switch (value) {\r\n      case \"AC\":\r\n        setOutput(0);\r\n        setIsOperator(true);\r\n        setIsDecimalAdded(true);\r\n        break;\r\n      case \"±\":\r\n        if(output === 0) return\r\n        setOutput((output * -1).toString());\r\n        break;\r\n      case \"%\":\r\n        if(output === 0) return;\r\n        setOutput((output / 100).toString());\r\n        break;\r\n      case \".\":\r\n        isDecimalAdded && setOutput(output + \".\");\r\n        setIsDecimalAdded(false);\r\n        break;\r\n      case \"+\":\r\n      case \"-\":\r\n      case \"x\":\r\n      case \"÷\":\r\n        if (output === 0) return;\r\n        isOperator && setOutput(output + value);\r\n        setIsDecimalAdded(true);\r\n        setIsOperator(false);\r\n        break;\r\n      case \"0\":\r\n        if (output === 0) return;\r\n        setOutput(output + \"0\");\r\n        break;\r\n      case \"=\":\r\n        let result = output\r\n          .replace(new RegExp(\"x\", \"g\"), \"*\")\r\n          .replace(new RegExp(\"÷\", \"g\"), \"/\");\r\n        setOutput(\r\n          eval(result).toString().length > 9 &&\r\n            eval(result).toString().includes(\".\")\r\n            ? eval(result).toFixed(9).toString()\r\n            : eval(result).toString()\r\n        );\r\n        break;\r\n      default:\r\n        value !== \"=\" && setOutput(output === 0 ? value : output + value);\r\n        setIsOperator(true);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <div\r\n        className=\"output\"\r\n        style={{ fontSize: output.length > 13 ? \"2rem\" : \"3rem\" }}\r\n      >\r\n        <span>\r\n        {output}\r\n        </span>\r\n      </div>\r\n      <div className=\"input\">\r\n        {Buttons.map((item, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"button\"\r\n          >\r\n            <button onClick={() => handleButtonClick(item.value)}>{item.value}</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default [\r\n  {\r\n    value: \"AC\"\r\n  },\r\n  {\r\n    value: \"±\"\r\n  },\r\n  {\r\n    value: \"%\"\r\n  },\r\n  {\r\n    value: \"÷\"\r\n  },\r\n  {\r\n    value: \"7\"\r\n  },\r\n  {\r\n    value: \"8\"\r\n  },\r\n  {\r\n    value: \"9\"\r\n  },\r\n  {\r\n    value: \"x\",\r\n  },\r\n  {\r\n    value: \"4\"\r\n  },\r\n  {\r\n    value: \"5\"\r\n  },\r\n  {\r\n    value: \"6\"\r\n  },\r\n  {\r\n    value: \"-\"\r\n  },\r\n  {\r\n    value: \"1\"\r\n  },\r\n  {\r\n    value: \"2\"\r\n  },\r\n  {\r\n    value: \"3\"\r\n  },\r\n  {\r\n    value: \"+\"\r\n  },\r\n  {\r\n    value: \"0\"\r\n  },\r\n  {\r\n    value: \"0\"\r\n  },\r\n  {\r\n    value: \".\"\r\n  },\r\n  {\r\n    value: \"=\"\r\n  },\r\n];\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n"],"sourceRoot":""}